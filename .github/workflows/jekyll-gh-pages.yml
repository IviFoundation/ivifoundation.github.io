# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Save time to current_time
        id: time
        run: echo "::set-output name=current_time::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
      - name: Create generation metadata
        run: |
          echo '{
            "time": "${{ steps.time.outputs.current_time }}",
            "githubAction": {
              "name": "${{ github.workflow }}",
              "runId": ${{ github.run_id }},
              "runNumber": ${{ github.run_number }},
              "actor": "${{ github.actor }}",
              "repository": "${{ github.repository }}",
              "sha": "${{ github.sha }}",
              "ref": "${{ github.ref }}",
              "event": "${{ github.event_name }}"
            }
          }' > site/metadata.json
          echo 'JSON metadata file created successfully!'
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          # Not needed with a .ruby-version file
          ruby-version: "3.1"
          # Runs 'bundle install' and caches installed gems automatically
          bundler-cache: true
          working-directory: ./site
      - name: Version info
        run: |
          ruby --version
          gem --version
          bundle --version
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        working-directory: ./site
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        if: ${{ success() && github.ref == 'refs/heads/main' }}
        with:
          path: ./site/_site/

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
        if: ${{ success() }}
